"use client";
import { useParams } from "next/navigation";
import DashboardLayout from "../../../components/DashboardLayout";
import AuthGuard from "../../../components/auth/AuthGuard";
import { useAuth } from "../../../components/auth/AuthProvider";
import { useEffect, useState } from "react";
import { getWriterJob } from "../../../lib/agentAPI";

export default function ReviewPage() {
  const { agentID, jobID } = useParams();
  const { token } = useAuth();
  const [job, setJob] = useState<any>(null);

  useEffect(() => {
    if (!jobID || !token) return;
    getWriterJob(jobID as string, token)
      .then(setJob)
      .catch(() => {});
  }, [jobID, token]);

  if (!job) return <AuthGuard><DashboardLayout>Loading...</DashboardLayout></AuthGuard>;
  const pages = job.pages || [];

  return (
    <AuthGuard>
      <DashboardLayout>
        <div className="p-6 text-[var(--foreground)] max-w-3xl mx-auto">
          <h1 className="text-2xl font-bold mb-4">Generated Pages</h1>
          {pages.length === 0 ? (
            <p>No pages generated.</p>
          ) : (
            pages.map((p: any, idx: number) => (
              <div key={idx} className="mb-6 border border-[var(--border)] p-4 rounded">
                <h3 className="font-bold mb-2">{p.name}</h3>
                <div className="prose prose-invert" dangerouslySetInnerHTML={{ __html: p.autogenerated_content }} />
              </div>
            ))
          )}
        </div>
      </DashboardLayout>
    </AuthGuard>
  );
}
